# initially adapted from https://github.com/saizai/wumpusphone/blob/master/asterisk-1.8.0.patch#L251
# less invastive version from https://github.com/hharte/1dcoinctrl/blob/master/asterisk/main/dsp.c-patch
# updated for asterisk 18.4.0

--- main/dsp.c.bak.orig	Thu May  6 10:34:57 2021
+++ main/dsp.c	Wed Jul 28 13:42:09 2021
@@ -278,10 +278,11 @@ typedef struct
 
 } tone_detect_state_t;
 
+#define DTMF_MATRIX_SIZE 5
 typedef struct
 {
-	goertzel_state_t row_out[4];
-	goertzel_state_t col_out[4];
+	goertzel_state_t row_out[DTMF_MATRIX_SIZE];
+	goertzel_state_t col_out[DTMF_MATRIX_SIZE];
 	int hits;			/* How many successive hits we have seen already */
 	int misses;			/* How many successive misses we have seen already */
 	int lasthit;
@@ -315,15 +316,16 @@ typedef struct
 } digit_detect_state_t;
 
 static const float dtmf_row[] = {
-	697.0,  770.0,  852.0,  941.0
+	697.0,  770.0,  852.0,  941.0, 1700
 };
 static const float dtmf_col[] = {
-	1209.0, 1336.0, 1477.0, 1633.0
+	1209.0, 1336.0, 1477.0, 1633.0, 2200
 };
 static const float mf_tones[] = {
 	700.0, 900.0, 1100.0, 1300.0, 1500.0, 1700.0
 };
-static const char dtmf_positions[] = "123A" "456B" "789C" "*0#D";
+
+static const char dtmf_positions[] = "123A-" "456B-" "789C-" "*0#D-" "----$";
 static const char bell_mf_positions[] = "1247C-358A--69*---0B----#";
 static int thresholds[THRESHOLD_MAX];
 static float dtmf_normal_twist;		/* AT&T = 8dB */
@@ -522,7 +524,7 @@ static void ast_dtmf_detect_init(dtmf_detect_state_t *
 {
 	int i;
 
-	for (i = 0; i < 4; i++) {
+	for (i = 0; i < DTMF_MATRIX_SIZE; i++) {
 		goertzel_init(&s->row_out[i], dtmf_row[i], sample_rate);
 		goertzel_init(&s->col_out[i], dtmf_col[i], sample_rate);
 	}
@@ -682,8 +684,8 @@ static void store_digit(digit_detect_state_t *s, char 
 
 static int dtmf_detect(struct ast_dsp *dsp, digit_detect_state_t *s, int16_t amp[], int samples, int squelch, int relax)
 {
-	float row_energy[4];
-	float col_energy[4];
+	float row_energy[DTMF_MATRIX_SIZE];
+	float col_energy[DTMF_MATRIX_SIZE];
 	int i;
 	int j;
 	int sample;
@@ -722,6 +724,8 @@ static int dtmf_detect(struct ast_dsp *dsp, digit_dete
 			goertzel_sample(s->td.dtmf.col_out + 2, samp);
 			goertzel_sample(s->td.dtmf.row_out + 3, samp);
 			goertzel_sample(s->td.dtmf.col_out + 3, samp);
+			goertzel_sample(s->td.dtmf.row_out + 4, samp);
+			goertzel_sample(s->td.dtmf.col_out + 4, samp);
 		}
 		s->td.dtmf.current_sample += (limit - sample);
 		if (s->td.dtmf.current_sample < DTMF_GSIZE) {
@@ -732,7 +736,7 @@ static int dtmf_detect(struct ast_dsp *dsp, digit_dete
 		row_energy[0] = goertzel_result(&s->td.dtmf.row_out[0]);
 		col_energy[0] = goertzel_result(&s->td.dtmf.col_out[0]);
 
-		for (best_row = best_col = 0, i = 1; i < 4; i++) {
+		for (best_row = best_col = 0, i = 1; i < DTMF_MATRIX_SIZE; i++) {
 			row_energy[i] = goertzel_result(&s->td.dtmf.row_out[i]);
 			if (row_energy[i] > row_energy[best_row]) {
 				best_row = i;
@@ -753,7 +757,7 @@ static int dtmf_detect(struct ast_dsp *dsp, digit_dete
 		    col_energy[best_col] < row_energy[best_row] * (relax ? relax_dtmf_reverse_twist : dtmf_reverse_twist) &&
 		    row_energy[best_row] < col_energy[best_col] * (relax ? relax_dtmf_normal_twist : dtmf_normal_twist)) {
 			/* Relative peak test */
-			for (i = 0; i < 4; i++) {
+			for (i = 0; i < DTMF_MATRIX_SIZE; i++) {
 				if ((i != best_col &&
 				    col_energy[i] * DTMF_RELATIVE_PEAK_COL > col_energy[best_col]) ||
 				    (i != best_row
@@ -762,10 +766,10 @@ static int dtmf_detect(struct ast_dsp *dsp, digit_dete
 				}
 			}
 			/* ... and fraction of total energy test */
-			if (i >= 4 &&
-			    (row_energy[best_row] + col_energy[best_col]) > DTMF_TO_TOTAL_ENERGY * s->td.dtmf.energy) {
+			if (i >= DTMF_MATRIX_SIZE &&
+			    (row_energy[best_row] + col_energy[best_col]) > (DTMF_TO_TOTAL_ENERGY / (relax ? 2 : 1)) * s->td.dtmf.energy) {
 				/* Got a hit */
-				hit = dtmf_positions[(best_row << 2) + best_col];
+				hit = dtmf_positions[(best_row * DTMF_MATRIX_SIZE) + best_col];
 				ast_debug(10, "DTMF hit '%c'\n", hit);
 			}
 		}
@@ -868,7 +872,7 @@ static int dtmf_detect(struct ast_dsp *dsp, digit_dete
 		}
 
 		/* Reinitialise the detector for the next block */
-		for (i = 0; i < 4; i++) {
+		for (i = 0; i < DTMF_MATRIX_SIZE; i++) {
 			goertzel_reset(&s->td.dtmf.row_out[i]);
 			goertzel_reset(&s->td.dtmf.col_out[i]);
 		}
